{"version":3,"sources":["components/home.jsx","components/Chat.jsx","components/img/plane-icon.png","components/Map.jsx","App.js","reportWebVitals.js","index.js"],"names":["socket","io","path","Chat","nombre","useState","mensaje","setMensaje","mensajes","setMensajes","useEffect","console","log","on","push","setUpSocket","disconnect","divRef","useRef","current","scrollIntoView","behavior","className","map","e","i","Date","date","name","message","ref","onSubmit","preventDefault","emit","id","cols","rows","value","onChange","target","position","seteado","PlaneIcon","Icon","iconUrl","plane","iconSize","Map","flightInfo","setFlightInfo","showPlane","setShowPlane","allPositions","setAllPositions","allFlights","setAllFlights","trajectory","setTrajectory","allLines","disconnectSocket","styles","height","borderRadius","info","display","obj","prev","length","code","origin","flights","forEach","element","destination","dict","MapContainer","center","zoom","minZoom","scrollWheelZoom","style","TileLayer","attribution","url","Marker","icon","Popup","positionCode","onClick","planecode","airline","seats","passengers","Polyline","positions","CircleMarker","trajecto","lat","lng","color","radius","Modal","show","overflow","backdrop","onHide","Container","passenger","index","age","toString","App","setNombre","registrado","setRegistrado","htmlFor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a2358eb.chunk.js","sourcesContent":["//import React, { useState, useEffect } from 'react';\nimport { io } from \"socket.io-client\";\nconst ENDPOINT = \"wss://tarea-3-websocket.2021-1.tallerdeintegracion.cl\";\n\nconst socket = io(ENDPOINT, {\n    path: '/flights'\n});\n\n\nexport default socket;","import React, { useState, useEffect, useRef } from \"react\";\nimport socket from \"./home\";\nimport \"../App.css\";\nimport { io } from \"socket.io-client\";\n\n\nconst ENDPOINT = \"wss://tarea-3-websocket.2021-1.tallerdeintegracion.cl\";\n\n\nconst Chat = ({ nombre }) => {\n  const [mensaje, setMensaje] = useState(\"\");\n  const [mensajes, setMensajes] = useState([]);\n  const setUpSocket = () => {\n    const socket = io(ENDPOINT, {\n      path: '/flights'\n    });\n    console.log(\"set UP\")\n    socket.on('CHAT', (mensaje) => {\n      mensajes.push(mensaje);\n      setMensaje(mensaje); \n      setMensajes(mensajes) \n    });\n    };\n  const disconnectSocket = () => {\n    socket.disconnect();\n  };\n    \n  useEffect(() => {\n    setUpSocket();\n\n    return () => disconnectSocket();\n    }, []);\n\n  const divRef = useRef(null);\n  useEffect(() => {\n    divRef.current.scrollIntoView({ behavior: \"smooth\" });\n  });\n\n  const submit = (e) => {\n    e.preventDefault();\n    socket.emit('CHAT', {\n        name: nombre,\n        message: mensaje,\n        date: '09/05/2021'\n        });\n    setMensaje(\"\");\n    setMensajes([...mensajes, mensaje]);\n  };\n\n  return (\n    <div>\n      <div className=\"chat\">\n        {mensajes.map((e, i) => (\n          <div key={i}>\n            <div>{Date(e.date)}-{e.name}:</div>\n            <div>{e.message}</div>\n          </div>\n        ))}\n        <div ref={divRef}></div>\n      </div>\n      <div className=\"text\">\n      <form onSubmit={submit}>\n        <textarea\n          name=\"\"\n          id=\"\"\n          cols=\"30\"\n          rows=\"10\"\n          value={mensaje}\n          onChange={(e) => setMensaje(e.target.value)}\n        >\n        \n        </textarea>\n        <button>Enviar</button>\n      </form>\n      </div>\n\n    </div>\n  );\n};\n\nexport default Chat;","export default __webpack_public_path__ + \"static/media/plane-icon.53368dcd.png\";","import React, { useState, useEffect } from \"react\";\nimport socket from \"./home\";\nimport \"../App.css\";\nimport \"../map.css\";\nimport { Container, Modal, Icon as IconRsuite, Loader } from 'rsuite';\nimport { io } from \"socket.io-client\";\nimport { MapContainer, TileLayer, Marker, Popup, Polyline, CircleMarker } from 'react-leaflet';\nimport plane from \"./img/plane-icon.png\";\nimport {Icon} from 'leaflet';\n\nconst position = [0,0];\nvar seteado = false;\n\n\n\nconst PlaneIcon = new Icon({\n    iconUrl: plane,\n    iconSize: [20, 20]\n})\nconst Map = () => {\n    const [flightInfo, setFlightInfo] = useState({\"code\": \"\",\n        \"airline\": \"\",\n        \"origin\": [],\n        \"destination\": [],\n        \"plane\": \"\",\n        \"seats\": 0,\n        \"passengers\": [] });\n    const [showPlane, setShowPlane] = useState(false)\n    const [allPositions, setAllPositions] = useState([]); // Posiciones actuales de todos los aviones\n    const [allFlights, setAllFlights] = useState([]); // Lista de vuelos (dicts)\n    const [trajectory, setTrajectory] = useState([]) /// Lista de todas las posiciones de un avion\n    const [allLines, setAllLines] = useState([])\n    const disconnectSocket = () => {\n        socket.disconnect();\n    };\n    \n    const styles = {\n        map: {\n          height: '100%',\n          borderRadius: 10,\n        },\n        info: {\n            display: showPlane ? '' : 'none',\n          },\n      };\n\n    useEffect(() => {\n        socket.on(\"POSITION\", obj => {\n            setTrajectory(prev => ([...prev, obj]));\n            for (var i = 0; i < allPositions.length;  i ++){\n                if (allPositions[i].code === obj.code){\n                    allPositions[i].origin = obj.position\n                    setAllPositions(allPositions)\n                    \n                }\n            };\n        })\n        return () => disconnectSocket();\n    }, []);\n    socket.emit(\"FLIGHTS\");\n    useEffect(() => {\n        socket.on(\"FLIGHTS\",(flights) => {\n            if (seteado === false){\n                flights.forEach(element => {\n                    allFlights.push(element);\n                    setAllFlights([allFlights])\n                    allLines.push([element.origin, element.destination])\n                    var dict = {\"origin\": element.origin, \"code\": element.code}\n                    allPositions.push(dict);\n                    setAllPositions(allPositions)\n                    seteado = true\n                });    \n            };  \n        });\n        return () => disconnectSocket();\n    }, []);\n    \n    const setPlaneInfo = (planecode) => {\n        allFlights[0].forEach(element => {\n            if (element.code == planecode){\n                setFlightInfo({\"code\": element.code,\n                \"airline\": element.airline,\n                \"origin\": element.origin,\n                \"destination\": element.destination,\n                \"plane\": element.plane,\n                \"seats\": element.seats,\n                \"passengers\": element.passengers})\n            }\n        });\n        setShowPlane(true)\n      }\n    \n    return (\n        <div>\n            <div id=\"mapa\">\n                <MapContainer center={position} zoom={0} minZoom={1} scrollWheelZoom={false} style={styles.map}>\n                    <TileLayer\n                        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    />\n                    {allPositions.map(element => {\n                    return (\n                        <Marker position={element.origin} icon={PlaneIcon}>\n                            <Popup code={element.code}>\n                                <code positionCode={element.code}>{element.code}</code>\n                                <a onClick={() => setPlaneInfo(element.code)}>Ver más</a>\n                            </Popup>\n                        </Marker> )\n                    \n                    })};\n                    {allLines.map(element=> {\n                        return (\n                        <Polyline\n                        positions={element}\n                        />\n                        )\n                    })};\n                    {allLines.map(element=> {\n                        return (\n                        <CircleMarker\n                            center={element[0]}\n                            >\n                        </CircleMarker>\n                        )\n                    })};\n                    {allLines.map(element=> {\n                        return (\n                        <CircleMarker\n                            center={element[1]}\n                            >\n                        </CircleMarker>\n                        )\n                    })};\n                    {\n                    trajectory.map(function(trajecto) {\n             \n                    return (\n                    <CircleMarker\n                        center={{lat:trajecto.position[0], lng: trajecto.position[1]}}\n                        color={'red'}\n                        radius={1}>\n                    </CircleMarker>\n                    )})\n                    }\n                </MapContainer>\n            </div>\n            <div>\n                <Modal show={showPlane} overflow backdrop onHide={() => setShowPlane(false)}>\n                    <button className=\"boton\"\n                    onClick={() => setShowPlane(false)}>Close Info</button>\n                </Modal>\n                <Container style={styles.info}>\n                    <div className=\"info\">\n                        <h2>Info Vuelo</h2>\n                            <p>Code: {flightInfo.code}</p>\n                            <p>Airline: {flightInfo.airline}</p>\n                            <p>Origin: {flightInfo.origin[0]},{flightInfo.origin[1]}</p>\n                            <p>Destination: {flightInfo.destination[0]},{flightInfo.destination[1]}</p>\n                            <p>Plane: {flightInfo.plane}</p>\n                            <p>Seats: {flightInfo.seats}</p>\n                            <p>Passangers: </p>\n                            {flightInfo.passengers.map((passenger, index) => (\n                                <p key={index.toString()}>- {passenger.name}: {passenger.age} años.</p>\n                            ))}\n                    </div>\n                </Container>\n            </div>\n        </div>\n    );\n  }\n  \n\nexport default Map;","import React, { useState } from \"react\";\nimport Chat from \"./components/Chat\";\nimport Map from \"./components/Map\";\nimport \"./App.css\";\n\nfunction App() {\n  const [nombre, setNombre] = useState(\"\");\n  const [registrado, setRegistrado] = useState(false);\n\n  const registrar = (e) => {\n    e.preventDefault();\n    if (nombre !== \"\") {\n      setRegistrado(true);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"wrapper\">\n        <div>\n          <Map></Map>\n        </div>\n        <div className=\"derecha\">\n          {!registrado && (\n            <form onSubmit={registrar}>\n              <label htmlFor=\"\">Introduzca su nombre</label>\n              <input value={nombre} onChange={(e) => setNombre(e.target.value)} />\n              <br></br>\n              <button>Ir al chat</button>\n            </form>\n          )}\n\n          {registrado && <Chat nombre={nombre} />}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}