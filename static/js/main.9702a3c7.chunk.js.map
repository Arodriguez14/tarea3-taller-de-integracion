{"version":3,"sources":["components/home.jsx","components/Chat.jsx","App.js","reportWebVitals.js","index.js"],"names":["socket","io","path","Chat","nombre","useState","mensaje","setMensaje","mensajes","setMensajes","useEffect","console","log","on","push","setUpSocket","disconnect","divRef","useRef","current","scrollIntoView","behavior","className","map","e","i","name","message","ref","onSubmit","preventDefault","emit","date","htmlFor","id","cols","rows","value","onChange","target","App","setNombre","registrado","setRegistrado","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQASeA,EALAC,aAFE,wDAEW,CACxBC,KAAM,a,eCwEKC,EArEF,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACd,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAgBAC,qBAAU,WAGR,OAlBkB,WAClB,IAAMV,EAASC,aAPF,wDAOe,CAC1BC,KAAM,aAERS,QAAQC,IAAI,UACZZ,EAAOa,GAAG,QAAQ,SAACP,GACjBE,EAASM,KAAKR,GACdC,EAAWD,GACXG,EAAYD,MAQdO,GAEO,WANPf,EAAOgB,gBAOJ,IAEL,IAAMC,EAASC,iBAAO,MACtBR,qBAAU,WACRO,EAAOE,QAAQC,eAAe,CAAEC,SAAU,cAc5C,OACE,gCACE,sBAAKC,UAAU,OAAf,UACGd,EAASe,KAAI,SAACC,EAAGC,GAAJ,OACZ,gCACE,gCAAMD,EAAEE,KAAR,OACA,8BAAMF,EAAEG,YAFAF,MAKZ,qBAAKG,IAAKX,OAEZ,uBAAMY,SAtBK,SAACL,GACdA,EAAEM,iBACF9B,EAAO+B,KAAK,OAAQ,CAChBL,KAAMtB,EACNuB,QAASrB,EACT0B,KAAM,eAEVzB,EAAW,IACXE,EAAY,GAAD,mBAAKD,GAAL,CAAeF,MAcxB,UACE,uBAAO2B,QAAQ,GAAf,gCACA,0BACEP,KAAK,GACLQ,GAAG,GACHC,KAAK,KACLC,KAAK,KACLC,MAAO/B,EACPgC,SAAU,SAACd,GAAD,OAAOjB,EAAWiB,EAAEe,OAAOF,UAIvC,mDCzCOG,MA1Bf,WACE,MAA4BnC,mBAAS,IAArC,mBAAOD,EAAP,KAAeqC,EAAf,KACA,EAAoCpC,oBAAS,GAA7C,mBAAOqC,EAAP,KAAmBC,EAAnB,KASA,OACE,sBAAKrB,UAAU,MAAf,WACIoB,GACA,uBAAMb,SAVM,SAACL,GACjBA,EAAEM,iBACa,KAAX1B,GACFuC,GAAc,IAOZ,UACE,uBAAOV,QAAQ,GAAf,kCACA,uBAAOI,MAAOjC,EAAQkC,SAAU,SAACd,GAAD,OAAOiB,EAAUjB,EAAEe,OAAOF,UAC1D,mDAIHK,GAAc,cAAC,EAAD,CAAMtC,OAAQA,QCbpBwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9702a3c7.chunk.js","sourcesContent":["//import React, { useState, useEffect } from 'react';\nimport { io } from \"socket.io-client\";\nconst ENDPOINT = \"wss://tarea-3-websocket.2021-1.tallerdeintegracion.cl\";\n\nconst socket = io(ENDPOINT, {\n    path: '/flights'\n});\n\n\nexport default socket;","import React, { useState, useEffect, useRef } from \"react\";\nimport socket from \"./home\";\nimport \"../App.css\";\nimport { io } from \"socket.io-client\";\n\nconst ENDPOINT = \"wss://tarea-3-websocket.2021-1.tallerdeintegracion.cl\";\n\n\nconst Chat = ({ nombre }) => {\n  const [mensaje, setMensaje] = useState(\"\");\n  const [mensajes, setMensajes] = useState([]);\n  const setUpSocket = () => {\n    const socket = io(ENDPOINT, {\n      path: '/flights'\n    });\n    console.log(\"set UP\")\n    socket.on('CHAT', (mensaje) => {\n      mensajes.push(mensaje);\n      setMensaje(mensaje); \n      setMensajes(mensajes) \n    });\n    };\n  const disconnectSocket = () => {\n    socket.disconnect();\n  };\n    \n  useEffect(() => {\n    setUpSocket();\n\n    return () => disconnectSocket();\n    }, []);\n\n  const divRef = useRef(null);\n  useEffect(() => {\n    divRef.current.scrollIntoView({ behavior: \"smooth\" });\n  });\n\n  const submit = (e) => {\n    e.preventDefault();\n    socket.emit('CHAT', {\n        name: nombre,\n        message: mensaje,\n        date: '09/05/2021'\n        });\n    setMensaje(\"\");\n    setMensajes([...mensajes, mensaje]);\n  };\n\n  return (\n    <div>\n      <div className=\"chat\">\n        {mensajes.map((e, i) => (\n          <div key={i}>\n            <div>{e.name}:</div>\n            <div>{e.message}</div>\n          </div>\n        ))}\n        <div ref={divRef}></div>\n      </div>\n      <form onSubmit={submit}>\n        <label htmlFor=\"\">Escriba su mensaje</label>\n        <textarea\n          name=\"\"\n          id=\"\"\n          cols=\"30\"\n          rows=\"10\"\n          value={mensaje}\n          onChange={(e) => setMensaje(e.target.value)}\n        >\n        \n        </textarea>\n        <button>Enviar</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Chat;","import React, { useState } from \"react\";\nimport Chat from \"./components/Chat\";\nimport \"./App.css\";\n\nfunction App() {\n  const [nombre, setNombre] = useState(\"\");\n  const [registrado, setRegistrado] = useState(false);\n\n  const registrar = (e) => {\n    e.preventDefault();\n    if (nombre !== \"\") {\n      setRegistrado(true);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {!registrado && (\n        <form onSubmit={registrar}>\n          <label htmlFor=\"\">Introduzca su nombre</label>\n          <input value={nombre} onChange={(e) => setNombre(e.target.value)} />\n          <button>Ir al chat</button>\n        </form>\n      )}\n\n      {registrado && <Chat nombre={nombre} />}\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}